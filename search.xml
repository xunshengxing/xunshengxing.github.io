<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>blog操作</title>
      <link href="/2025/09/30/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/blog%E6%93%8D%E4%BD%9C/"/>
      <url>/2025/09/30/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/blog%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="涉及分类卡片（暂不使用）"><a href="#涉及分类卡片（暂不使用）" class="headerlink" title="涉及分类卡片（暂不使用）"></a>涉及分类卡片（暂不使用）</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/categories/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">java面试</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509270104151.jpg</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">/categories/java面试/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">博客搭建</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509270104152.jpg</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">/categories/博客搭建/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">随便写写</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509270104156.jpg</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">/categories/随便写写/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">其他</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">/img/fengmian8.jpg</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br></pre></td></tr></table></figure><h2 id="首页分类标签-现在使用"><a href="#首页分类标签-现在使用" class="headerlink" title="首页分类标签(现在使用)"></a>首页分类标签(现在使用)</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">magnet:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line">  <span class="attr">devide:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">随便写写</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">随便</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">📚</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">java面试</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">java面试八股</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">🎮</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">博客搭建</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">Hexo博客搭建</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">🐱‍👓</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">vue</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小冰の编程学习</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">👩‍💻</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">学习</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小冰の读书笔记</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">📒</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">随想</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小冰の胡思乱想</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">💡</span></span><br><span class="line">  <span class="attr">color_setting:</span></span><br><span class="line">    <span class="attr">text_color:</span> <span class="string">black</span></span><br><span class="line">    <span class="attr">text_hover_color:</span> <span class="string">white</span></span><br><span class="line">    <span class="attr">background_color:</span> <span class="string">&quot;#f2f2f2&quot;</span></span><br><span class="line">    <span class="attr">background_hover_color:</span> <span class="string">&quot;#b30070&quot;</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">temple_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height: auto&quot;&gt;&lt;div id=&quot;catalog_magnet&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  <span class="attr">plus_style:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="预处理格式"><a href="#预处理格式" class="headerlink" title="预处理格式"></a>预处理格式</h2><h3 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:  必需 </span><br><span class="line">date:   必须</span><br><span class="line">updated:  可选</span><br><span class="line">type:   必需</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">aside:   显示侧边栏</span><br><span class="line">aplayer:   是否加载</span><br><span class="line">highlight_shrink:  配置代码框是否展开</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p>前往你的 Hexo 的根目录</p></li><li><p>输入 <code>hexo new page tags</code> </p></li><li><p>你会找到 <code>source/tags/index.md</code> 这个文件</p></li><li><p>修改这个文件</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &#x27;tags&#x27;</span><br><span class="line">orderby: random</span><br><span class="line"><span class="section">order: 1</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="文章配置"><a href="#文章配置" class="headerlink" title="文章配置"></a>文章配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: 文章顶部图</span><br><span class="line">cover:   文章缩略图</span><br><span class="line">toc:     目录</span><br><span class="line">toc_number:</span><br><span class="line">toc_style_simple:  toc简洁模式</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">aside:</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis面试题</title>
      <link href="/2025/09/26/java%E9%9D%A2%E8%AF%95/Redis/"/>
      <url>/2025/09/26/java%E9%9D%A2%E8%AF%95/Redis/</url>
      
        <content type="html"><![CDATA[<h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><h3 id="Redis-使用场景"><a href="#Redis-使用场景" class="headerlink" title="Redis 使用场景"></a>Redis 使用场景</h3><h4 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h4><p>查询一个不存在的数据，Mysql 查询不到数据也不会直接写入缓存，就会导致每次请求都查数据库</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261921325.png" alt="image-20250926192114283" style="zoom: 90%;" /><p>方案二：</p><p>布隆过滤器</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261921233.png" alt="image-20250926192150185" style="zoom: 75%;" /><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261922862.png" alt="image-20250926192250804"></p><p>实现方案：</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261924088.png" alt="image-20250926192428047" style="zoom: 85%;" /><h4 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h4><p>在 Redis 一个 key 过期的临界点，发送来大量请求，会压垮 DB</p><h5 id="互斥锁解决"><a href="#互斥锁解决" class="headerlink" title="互斥锁解决"></a>互斥锁解决</h5><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261929456.png" title="" alt="image-20250926192932414" width="276"><p>保证数据的强一致性，但性能差</p><h5 id="逻辑过期"><a href="#逻辑过期" class="headerlink" title="逻辑过期"></a>逻辑过期</h5><img title="" src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261931125.png" alt="image-20250926193133076" style="zoom: 80%;" width="482"><p>优先保证高可用，性能优</p><h4 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h4><p>同一时段大量的缓存 key 同时失效或者 Redis 服务宕机，导致大量请求到达数据库</p><img title="" src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509261934517.png" alt="image-20250926193410459" style="zoom: 75%;" width="661"><h3 id="双写一致性"><a href="#双写一致性" class="headerlink" title="双写一致性"></a>双写一致性</h3><p>当修改了数据库的数据也要同时更新缓存的数据，缓存和数据库的数据要保持一致</p><h4 id="一致性要求高"><a href="#一致性要求高" class="headerlink" title="一致性要求高"></a>一致性要求高</h4><img title="" src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251001110715961.png" alt="image-20251001110708861" style="zoom: 80%;" width="672"><ul><li>读操作：缓存命中直接返回，缓存未命中查询数据库，写入缓存，设定超时时间</li><li>写操作：<span style="color:#CC0000;">延迟双删</span></li></ul><img title="" src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251001110816853.png" alt="image-20251001110816825" style="zoom: 85%;" width="702"><p>先删除缓存，再操作数据库</p><p>正常流程                                             脏数据</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251001111228497.png" title="" alt="image-20251001111228458" width="229" style="zoom:105%;"   > <img title="" src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251001111239223.png" alt="image-20251001111239189" width="197" style="zoom: 110%;"></p><p>先操作数据库，再删除缓存</p><p>正常流程                                        脏数据</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002133901630.png" alt="image-20251002133854531" style="zoom: 50%;" /> <img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002133938515.png" alt="image-20251002133938440" style="zoom: 50%;" /></p><ul><li>为什么要删除两次缓存：避免脏数据</li><li>为什么要延时删除？</li></ul><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002134146246.png" alt="image-20251002134146173" style="zoom: 80%;" /><p>一般情况下数据库是主从模式，读写分离，需要延时一会让主节点把数据同步到从节点，依旧有脏数据的风险</p><h4 id="强一致性"><a href="#强一致性" class="headerlink" title="强一致性"></a>强一致性</h4><p>如果要保证强一致性，分布式锁</p><p>一般放入缓存中的数据都是<span style="color:#CC0000;">读多写少</span></p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002134355762.png" alt="image-20251002134355712" style="zoom: 65%;" /> <img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002134448461.png" alt="image-20251002134448410" style="zoom: 65%;" /></p><h4 id="弱一致性"><a href="#弱一致性" class="headerlink" title="弱一致性"></a>弱一致性</h4><ol><li>异步通知保证数据的最终一致性</li></ol><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002134638230.png" alt="image-20251002134638167"></p><ol start="2"><li>基于 Canal 的异步通知</li></ol><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002134813847.png" alt="image-20251002134750064"></p><p><code>二进制日志（BINLOG）记录了所有的DDL语句和DML语句，但不包括是数据查询语句</code></p><h3 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h3><p>Redis 中提供了两种数据持久化的方式，：1、RDB 2、AOF</p><h4 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h4><p>RDB 全程 Redis 数据备份文件，简单来说就是把内存中所有数据记录到磁盘中。当 Redis 实例出现故障重启后，从磁盘中读取快照文件、恢复数据</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002135505910.png" alt="image-20251002135505805"></p><p>Redis 内部有自动执行 RDB 的机制，在 redis.config 文件中</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002135612377.png" alt="image-20251002135612314"></p><h5 id="RDB-的执行原理"><a href="#RDB-的执行原理" class="headerlink" title="RDB 的执行原理"></a>RDB 的执行原理</h5><p>bgsave 开始时会 fork 主进程得到子进程，子进程共享主进程的内存数据。完成 fork 后读取内存数据并写入 RDB 文件</p><p>fork 采用的是 copy-on-write 技术</p><ul><li>当主进程执行读操作时，访问共享内存</li><li>当主进程执行写操作时，则会拷贝一份数据，执行写操作，然后页面修改映射到新的数据</li></ul><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002135947312.png" alt="image-20251002135947245"></p><h4 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h4><p>AOF 全称为 Append Only File（追加文件）。Redis 处理的每一个写命令都会记录在 AOF 文件，可以看做是命令日志文件。</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002140707052.png" alt="image-20251002140706990"></p><p>AOF 默认是关闭的，需要修改 redis.conf 配置文件来开启 AOF</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002140809916.png" alt="image-20251002140809868"></p><p>AOF 的命令记录的频率夜可以通过 redis.conf 文件来配</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002140818033.png" alt="image-20251002140817974"></p><p>缺点</p><p>因为是记录命令，AOF 文件比 RDB 文件要大的多。而且 AOF 会记录对同一个记录的多次写操作，但只有最后一次写操作才有意义。通过执行 bgrewriteaof 命令，可以让 AOF 文件执行重写功能，用最少的命令达到相同效果</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002141120458.png" alt="image-20251002141120411"></p><p>Redis 也会在触发阈值时自动去重写 AOF 文件。阈值也可以在 conf 中配置</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002141201414.png" alt="image-20251002141201351"></p><h4 id="RDB-与-AOF-对比"><a href="#RDB-与-AOF-对比" class="headerlink" title="RDB 与 AOF 对比"></a>RDB 与 AOF 对比</h4><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002141403510.png" alt="image-20251002141403446"></p><h3 id="数据过期策略"><a href="#数据过期策略" class="headerlink" title="数据过期策略"></a>数据过期策略</h3><p>Redis对数据设置数据的有效时间，数据过期以后，就需要将数据从内存中删除掉。可以按照不同的规则进行删除，这种删除规则就称为数据的删除策略</p><h4 id="惰性删除"><a href="#惰性删除" class="headerlink" title="惰性删除"></a>惰性删除</h4><p>设置key之后，只有在用到该key时，才检查是否过期。过期就删除，反之返回key</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002141814195.png" alt="image-20251002141814127" style="zoom: 75%;" /><p>优：对CPU友好，很多用不到的key不用浪费时间进行过期检查</p><p>缺：对内存不友好，如果一个key过期却没有使用，会一直存在内存中</p><h4 id="定期删除"><a href="#定期删除" class="headerlink" title="定期删除"></a>定期删除</h4><p>定期删除：每隔一段时间对<span style="color:#FF0000;">一些</span>key进行检查，从一定数量的数据库中取出一定数量的随机key进行处理</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002142254663.png" alt="image-20251002142254604"></p><h3 id="数据淘汰策略"><a href="#数据淘汰策略" class="headerlink" title="数据淘汰策略"></a>数据淘汰策略</h3><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002142411952.png" alt="image-20251002142411869"></p><p>LRU：最近最少使用</p><p>LFU：最少频率使用</p><h4 id="使用建议"><a href="#使用建议" class="headerlink" title="使用建议"></a>使用建议</h4><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002142549365.png" alt="image-20251002142549277"></p><h3 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h3><p>redis分布式锁，是如何实现的？</p><h4 id="抢券场景"><a href="#抢券场景" class="headerlink" title="抢券场景"></a>抢券场景</h4><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002142849058.png" alt="image-20251002142848985"></p><p>超卖问题</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002142940648.png" alt="image-20251002142940588" style="zoom: 65%;" /><p>单体服务解决方案：</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143026686.png" alt="image-20251002143026597"></p><p>在多个服务器上不能使用本地锁，本地锁是基于每个服务器的，这个时候需要使用外部的分布式锁</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143152388.png" alt="image-20251002143152290"></p><p>分布式锁</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143232043.png" alt="image-20251002143231939"></p><h4 id="Redis分布式锁"><a href="#Redis分布式锁" class="headerlink" title="Redis分布式锁"></a>Redis分布式锁</h4><p>Redis实现分布式锁主要利用Redis的setnx命令，setnx是SET if not exists的简写</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143336686.png" alt="image-20251002143336630" style="zoom: 85%;" /><p>如果不设置超时时间会出现死锁的问题</p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143418352.png" alt="image-20251002143418287" style="zoom: 80%;" /><p>Redis实现分布式锁如何合理的控制锁的有效时长</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143529352.png" alt="image-20251002143529292"></p><h4 id="Redis分布式锁执行流程"><a href="#Redis分布式锁执行流程" class="headerlink" title="Redis分布式锁执行流程"></a>Redis分布式锁执行流程</h4><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002143708877.png" alt="image-20251002143708806"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">redisLock</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">    <span class="comment">//获取锁，执行锁的名称</span></span><br><span class="line">    <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClinet.getLock(<span class="string">&quot;heimalock&quot;</span>);</span><br><span class="line">    <span class="comment">//尝试获取锁，参数分别是：获取锁的最大等待时间（期间会重试），锁自动释放时间</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isLock</span> <span class="operator">=</span> lock.tryLock(<span class="number">10</span>,TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">//判断是否获取成功</span></span><br><span class="line">    <span class="keyword">if</span> (isLock) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sout(<span class="string">&quot;执行业务&quot;</span>)</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//释放锁</span></span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Watch dog给锁续期，默认是每隔10秒续期一次</li><li>抢不到锁的线程会自动重试</li><li>加锁、设置过期时间都是基于<span style="color:#CC0000;">lua</span>脚本命令完成，保证操作的原子性</li></ul><h4 id="分布式锁-可重入"><a href="#分布式锁-可重入" class="headerlink" title="分布式锁-可重入"></a>分布式锁-可重入</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add1</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClinet.getLock(<span class="string">&quot;heimalock&quot;</span>);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isLock</span> <span class="operator">=</span> lock.tryLock();</span><br><span class="line"><span class="comment">//执行业务</span></span><br><span class="line">    add2();</span><br><span class="line">    <span class="comment">//释放锁</span></span><br><span class="line">    lock.unlock();</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClinet.getLock(<span class="string">&quot;heimalock&quot;</span>);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isLock</span> <span class="operator">=</span> lock.tryLock();</span><br><span class="line"><span class="comment">//执行业务</span></span><br><span class="line">    <span class="comment">//释放锁</span></span><br><span class="line">    lock.unlock();</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002144706850.png" alt="image-20251002144706776" style="zoom: 90%;" />可以重入，多个锁重入需要判断是否是当前线程</p><h4 id="主从一致性"><a href="#主从一致性" class="headerlink" title="主从一致性"></a>主从一致性</h4><p>主节点主要负责写数据，从节点主要负责读操作，当主节点发生写操作后会将数据同步到从节点</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002145059649.png" alt="image-20251002145059575"></p><p>主节点在获取锁后宕机了，还没有同步数据，一个从节点成为主节点，因为之前的数据没有同步过来，所以从节点也能获取到同一把锁，出现两个线程持有同一把锁，锁失去了互斥性</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002144808103.png" alt="image-20251002144808012"></p><p>RedLock（红锁）：不能只在一个redis实例上创建锁，应该在多个redis实例上创建锁(n&#x2F;2+1)，避免在一个redis实例上枷锁</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20251002145407992.png" alt="image-20251002145407911"></p><h3 id="Redis集群"><a href="#Redis集群" class="headerlink" title="Redis集群"></a>Redis集群</h3><h4 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h4><h4 id="哨兵模式"><a href="#哨兵模式" class="headerlink" title="哨兵模式"></a>哨兵模式</h4><h4 id="分片集群"><a href="#分片集群" class="headerlink" title="分片集群"></a>分片集群</h4>]]></content>
      
      
      <categories>
          
          <category> java面试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2025/09/26/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/git/"/>
      <url>/2025/09/26/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/git/</url>
      
        <content type="html"><![CDATA[<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>版本控制工具</p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h4 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h4><p>版本：软件版本、文件版本</p><p>版本控制：</p><ol><li>保存和管理文件</li><li>提供客户端工具进行访问</li><li>提供不同版本文件比对功能</li></ol><h4 id="集中式版本控制"><a href="#集中式版本控制" class="headerlink" title="集中式版本控制"></a>集中式版本控制</h4><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20250929152218914.png" alt="image-20250929152218880"></p><p>问题：</p><ol><li>文件冲突问题，多人同时下载修改后上传，后面的人上传文件会把前面的人所作的修改覆盖，VSS解决策略：加锁 ；CVS：不同用户修改区域不同，比如张三写第一行，李四写第二行；</li><li>中央服务器存在隐患</li></ol><h4 id="分布式版本控制"><a href="#分布式版本控制" class="headerlink" title="分布式版本控制"></a>分布式版本控制</h4><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/20250929152934661.png" alt="image-20250929152934625"></p><p>在本地搭建一个一样的资源库</p><h4 id="多人协作开发"><a href="#多人协作开发" class="headerlink" title="多人协作开发"></a>多人协作开发</h4>]]></content>
      
      
      <categories>
          
          <category> 随便写写 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客添加音乐组件</title>
      <link href="/2025/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Bufferfly%20Blog%20%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Bufferfly%20Blog%20%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Bufferfly-Blog-配置"><a href="#Bufferfly-Blog-配置" class="headerlink" title="Bufferfly Blog 配置"></a>Bufferfly Blog 配置</h1><h2 id="添加音乐组件"><a href="#添加音乐组件" class="headerlink" title="添加音乐组件"></a>添加音乐组件</h2><p>这里选择的解决方案，Aplayer + meting </p><ol><li><p>首先下载包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br><span class="line"></span><br><span class="line">npm install meting@2.0.1 --save</span><br></pre></td></tr></table></figure></li><li><p>将dist中的文件加入到主题的source路径下</p><p><img src="https://wh-hexo-blog.oss-cn-guangzhou.aliyuncs.com/202509232252561.png" alt="image-20250923225202494"></p></li><li><p>修改配置文件</p><ul><li><p>主题配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="string">aplayer</span>   <span class="comment">#开启音乐播放器</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="literal">true</span>    <span class="comment">#每个页面都有Aplayer</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实现不会因跳转其他页面而重新播放音乐</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>根配置文件hexo配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#全局音乐 需要将asset_inject设置成false</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line"><span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>引用播放器</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/dist/Aplayer.min.css&quot;&gt;</span>  <span class="string">&lt;!--</span> <span class="string">路径修正</span> <span class="string">--&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/dist/Aplayer.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/dist/Meting.min.js&quot;&gt;&lt;/script&gt;</span>           <span class="string">&lt;!--</span> <span class="string">MetingJS</span> <span class="string">放这里</span> <span class="string">--&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;meting-js</span> <span class="string">server=&quot;netease&quot;</span> <span class="string">type=&quot;playlist&quot;</span> <span class="string">id=&quot;14328758050&quot;</span> <span class="string">fixed=&quot;true&quot;</span> <span class="string">autoplay=&quot;true&quot;</span> <span class="string">theme=&quot;#ad7a86&quot;&gt;&lt;/meting-js&gt;</span></span><br></pre></td></tr></table></figure><p>这里的id就是歌单id</p><h2 id="添加分类磁贴"><a href="#添加分类磁贴" class="headerlink" title="添加分类磁贴"></a>添加分类磁贴</h2><p>&#x3D;&#x3D;关键：hexo采用6.3版本&#x3D;&#x3D;</p><ol><li><p>安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-categories-card --save</span><br></pre></td></tr></table></figure></li><li><p>添加配置信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">Ubuntu指南</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover1.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">玩转Win10</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover2.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">长篇小说连载</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover3.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">个人日记</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover4.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">诗词歌赋</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover5.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">杂谈教程</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover6.webp</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br></pre></td></tr></table></figure><ol start="3"><li>参数释义</li></ol><table><thead><tr><th align="left">参数</th><th align="left">备选值&#x2F;类型</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">priority</td><td align="left">number</td><td align="left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td align="left">enable</td><td align="left">true&#x2F;false</td><td align="left">【必选】控制开关</td></tr><tr><td align="left">enable_page</td><td align="left">path&#x2F;all</td><td align="left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’&#x2F;‘,分类页面就填’&#x2F;categories&#x2F;‘。若要应用于所有页面，就填’all’，默认为’&#x2F;‘</td></tr><tr><td align="left">layout.type</td><td align="left">id&#x2F;class</td><td align="left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td align="left">layout.name</td><td align="left">text</td><td align="left">【必选】挂载容器名称</td></tr><tr><td align="left">layout.index</td><td align="left">0和正整数</td><td align="left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td align="left">column</td><td align="left">odd&#x2F;even</td><td align="left">【可选】显示列数，考虑到比例问题，只提供3列和4列，odd为3列， even为4列</td></tr><tr><td align="left">row</td><td align="left">number</td><td align="left">【可选】显示行数，默认两行，超过行数切换为滚动显示</td></tr><tr><td align="left">message.descr</td><td align="left">text</td><td align="left">分类描述,需要和你自己的文章分类一一对应。</td></tr><tr><td align="left">message.cover</td><td align="left">url</td><td align="left">分类背景,需要和你自己的文章分类一一对应。</td></tr><tr><td align="left">custom_css</td><td align="left">url</td><td align="left">【可选】自定义样式，会替换默认的css链接，可以下载文档给出的cdn链接后自主修改</td></tr></tbody></table></li></ol><p>参考链接<a href="https://akilar.top/posts/a9131002/">https://akilar.top/posts/a9131002/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2025/09/23/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/09/23/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> 随便写写 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
